package com.skillstorm.week1.day4;

// Factory Design pattern is a way to manage the creation of objects
// Instead of say new Whatever() everywhere in the codebase, you instead leverage the factory

// Factory design pattern allows for decoupling so that I can get back a Superhero, but it doesn't
// matter which one I get back
public class SuperheroFactory {

	public Superhero createSuperHero() {
		return new Superman(); // Create the default hero
	}
	
	public Superhero createSuperHero(String name) {
		if (name == null) {
			return createSuperHero(); // Prevents me from changing in two places at once
		}
		
		// Based on the name, match the case
		switch(name.toUpperCase()) {
			case "SUPERMAN":
				return new Superman();
			case "BATMAN":
			case "GREENLANTERN":
			case "GREEN LANTERN":
		}
	}
}
