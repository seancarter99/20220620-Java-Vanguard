package mavenpractice;

import static org.junit.Assert.*;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import mavenpractice.com.skillstorm.Ballot;

public class BallotTest {

	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
	}

	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	@Before
	public void setUp() throws Exception {
	}

	@After
	public void tearDown() throws Exception {
	}

	// Ballot is going have a candidate attached
	// If the first pick candidate is null, throw an exception
	// If the first pick is present, but the other two are empty, that's fine
	// First pick candidate should count for 3 votes
	// Second pick for 2
	// third for 1
	
	// 1 John - 3 votes
	// 2 Sally - 2 votes
	// 3 Drew - 1 vote
	
	@Test
	public void createBallotWithNoFirstPick() {
		assertThrows(IllegalArgumentException.class, () -> {
			Ballot b = new Ballot(null);
		});
	}

}
